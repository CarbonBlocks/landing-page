{"ast":null,"code":"import { MongoClient } from \"mongodb\";\nconst uri = process.env.MONGODB_URI;\nconst options = {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n};\nlet client;\nlet clientPromise;\nexport async function connectToDatabase() {\n  if (!client) {\n    try {\n      client = new MongoClient(uri, options);\n      await client.connect();\n      console.log(\"Connected to MongoDB successfully\"); // Log success\n    } catch (error) {\n      console.error(\"Failed to connect to MongoDB:\", error); // Log failure\n\n      throw error; // Optionally, re-throw the error to handle it further up the call stack\n    }\n  }\n\n  return {\n    db: client.db(\"CarbonBlocks\")\n  }; // Replace \"your_database_name\" with your actual database name\n}","map":{"version":3,"sources":["/Users/aaronkigler/Desktop/CompSci/carbonBlocks/landing-page/client/pages/utils/mongodb.js"],"names":["MongoClient","uri","process","env","MONGODB_URI","options","useNewUrlParser","useUnifiedTopology","client","clientPromise","connectToDatabase","connect","console","log","error","db"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,WAAxB;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,eAAe,EAAE,IADH;AAEdC,EAAAA,kBAAkB,EAAE;AAFN,CAAhB;AAKA,IAAIC,MAAJ;AACA,IAAIC,aAAJ;AAEA,OAAO,eAAeC,iBAAf,GAAmC;AACxC,MAAI,CAACF,MAAL,EAAa;AACX,QAAI;AACFA,MAAAA,MAAM,GAAG,IAAIR,WAAJ,CAAgBC,GAAhB,EAAqBI,OAArB,CAAT;AACA,YAAMG,MAAM,CAACG,OAAP,EAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAHE,CAGgD;AACnD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAc,+BAAd,EAA+CA,KAA/C,EADc,CACyC;;AACvD,YAAMA,KAAN,CAFc,CAED;AACd;AACF;;AACD,SAAO;AAAEC,IAAAA,EAAE,EAAEP,MAAM,CAACO,EAAP,CAAU,cAAV;AAAN,GAAP,CAXwC,CAWE;AAC3C","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nconst uri = process.env.MONGODB_URI;\nconst options = {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n};\n\nlet client;\nlet clientPromise;\n\nexport async function connectToDatabase() {\n  if (!client) {\n    try {\n      client = new MongoClient(uri, options);\n      await client.connect();\n      console.log(\"Connected to MongoDB successfully\"); // Log success\n    } catch (error) {\n      console.error(\"Failed to connect to MongoDB:\", error); // Log failure\n      throw error; // Optionally, re-throw the error to handle it further up the call stack\n    }\n  }\n  return { db: client.db(\"CarbonBlocks\") }; // Replace \"your_database_name\" with your actual database name\n}\n"]},"metadata":{},"sourceType":"module"}